package com.bea.medrec.entities;

import com.bea.medrec.value.VitalSigns;
import javax.ejb.CreateException;
import weblogic.ejb.GenericEntityBean;

/**
 * <p>VitalSignsEJB is an Container Managed EntityBean that
 * manipulates record persisted data.</p>
 *
 * @author Copyright (c) 2004 by BEA Systems. All Rights Reserved.
 *
 * EJBGen tags:
 * @ejbgen:jndi-name
 *
 * @ejbgen:automatic-key-generation
 *   name = VITAL_SIGNS_SEQ
 *   type = NAMED_SEQUENCE_TABLE
 *   cache-size = 10
 *
 * @ejbgen:create-default-dbms-tables
 *   value = Disabled
 *
 * @ejbgen:entity
 *   max-beans-in-cache = 1000
 *   data-source-name = MedRecTxDataSource
 *   trans-timeout-seconds = 0
 *   ejb-name = VitalSignsEJB
 *   reentrant = False
 *   concurrency-strategy = Database
 *   delay-database-insert-until = ejbPostCreate
 *   table-name = vital_signs
 *   read-timeout-seconds = 600
 *   prim-key-class = java.lang.Integer
 *   default-transaction = Required
 *   abstract-schema-name = VitalSignsEJB
 *
 * @ejbgen:relation
 *   cascade-delete = false
 *   cmr-field = vitalSigns
 *   name = Record-VitalSigns
 *   multiplicity = one
 *   target-ejb = RecordEJB
 *
 * @ejbgen:file-generation
 *   local-class = True
 *   local-home = True
 *   value-class = False
 */
public abstract class VitalSignsEJB extends GenericEntityBean
{
      // Local methods
  // Container managed fields
 /**
  * EJBGen tags:
  * @ejbgen:cmp-field
  *   column = id
  *
  * @ejbgen:primkey-field
  *
  * @ejbgen:local-method
  */
  public abstract Integer getId();

 /**
  * EJBGen tags:
  * @ejbgen:local-method
  */
  public abstract void setId(Integer id);

 /**
  * EJBGen tags:
  * @ejbgen:cmp-field
  *   column = temperature
  *
  * @ejbgen:local-method
  */
  public abstract String getTemperature();

 /**
  * EJBGen tags:
  * @ejbgen:local-method
  */
  public abstract void setTemperature(String temperature);

 /**
  * EJBGen tags:
  * @ejbgen:cmp-field
  *   column = blood_pressure
  *
  * @ejbgen:local-method
  */
  public abstract String getBloodPressure();

 /**
  * EJBGen tags:
  * @ejbgen:local-method
  */
  public abstract void setBloodPressure(String bloodPressure);

 /**
  * EJBGen tags:
  * @ejbgen:cmp-field
  *   column = pulse
  *
  * @ejbgen:local-method
  */
  public abstract String getPulse();

 /**
  * EJBGen tags:
  * @ejbgen:local-method
  */
  public abstract void setPulse(String pulse);

 /**
  * EJBGen tags:
  * @ejbgen:cmp-field
  *   column = weight
  *
  * @ejbgen:local-method
  */
  public abstract Integer getWeight();

 /**
  * EJBGen tags:
  * @ejbgen:local-method
  */
  public abstract void setWeight(Integer weight);

 /**
  * EJBGen tags:
  * @ejbgen:cmp-field
  *   column = height
  *
  * @ejbgen:local-method
  */
  public abstract Integer getHeight();

 /**
  * EJBGen tags:
  * @ejbgen:local-method
  */
  public abstract void setHeight(Integer height);

 /**
  * <p>Returns a value object representation of the bean.</p>
  *
  * @return VitalSigns
  *
  * EJBGen tags:
  * @ejbgen:local-method
  */
  public VitalSigns getVitalSigns()
  {
    VitalSigns vitals = new VitalSigns();
    vitals.setId(getId());
    vitals.setTemperature(getTemperature());
    vitals.setBloodPressure(getBloodPressure());
    vitals.setPulse(getPulse());
    vitals.setWeight(getWeight());
    vitals.setHeight(getHeight());
    return vitals;
  }

    // Home methods
 /***
  * <p>Vitals create.</p>
  */
  public Object ejbCreate(String temperature,
                          String bloodPressure,
                          String pulse,
                          Integer weight,
                          Integer height)
    throws CreateException
  {
    setTemperature(temperature);
    setBloodPressure(bloodPressure);
    setPulse(pulse);
    setWeight(weight);
    setHeight(height);

    return null;
  }

  public void ejbPostCreate(String temperature,
                            String bloodPressure,
                            String pulse,
                            Integer weight,
                            Integer height)
    throws CreateException
  { /* not implemented */ }

 /***
  * <p>Vitals create.</p>
  */
  public Object ejbCreate(VitalSigns vitalSigns)
    throws CreateException
  {
    setTemperature(vitalSigns.getTemperature());
    setBloodPressure(vitalSigns.getBloodPressure());
    setPulse(vitalSigns.getPulse());
    setWeight(vitalSigns.getWeight());
    setHeight(vitalSigns.getHeight());

    return null;
  }

  public void ejbPostCreate(VitalSigns vitalSigns)
    throws CreateException
  { /* not implemented */ }
}