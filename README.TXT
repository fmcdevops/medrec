###############################################
#                                             #
#  BEA Systems Inc - WebLogic Server 8.1 SP3  #
#                                             #
#  Avitek Medical Records Sample Application  #
#                                             #
#              Version 1.1.1                  #
#                                             #
#            Copyright 2003-2004              #
#                                             #
###############################################

Introduction
------------
Avitek Medical Records (or MedRec) is a WebLogic Server sample application 
suite that concisely demonstrates all aspects of the J2EE platform. MedRec is 
designed as an educational tool for all levels of J2EE developers. It 
showcases the use of each J2EE component, and illustrates best practice 
design patterns for component interaction and client development. MedRec also 
illustrates best practices for developing and deploying applications with 
WebLogic Server.


What's New in 1.1.1
-------------------
The following is a list of enhancements and fixes included in MedRec 1.1.1.
- Upgraded to Struts 1.1 validation.


Distribution
------------
This is the top-level project directory for the Avitek Medical Records
sample application.  You can use the subdirectories and files in this
directory to rebuild the MedRec applications or the installed MedRec
domain.  

This project directory contains the following subdirectory structure:

  WL_HOME\samples\server\medrec
                               \build (Deployable Split Development Directories)
                               \dist (Complete Deployable Application Directories)
                               \doc
                               \lib (Third-Party .jar Files)
                               \setup (Files to recreate the MedRec domain)
                                     \config
                                     \db
                               \src (Source files for all MedRec Applications)
                                   \commmon
                                   \medrecEar
                                   \physicianEar
                                   \startupEar


  \build
  ------  
  \build contains the compiled classes generated by the MedRec build
  script.  It does not contain editable source files or deployment
  descriptors, which reside in \src.  Each subdirectory in \build
  represents the compiled classes for MedRec clients (\client) or for a
  MedRec application (\medrec, \physician, and \startup applications).
  
  \build and \src together represent a WebLogic Server split development
  directory.  You can deploy individual MedRec applications to a
  development server by targetting an application subdirectory (such as
  \build\medrec) using weblogic.Deployer.  WebLogic Server locates the
  necessary deployment descriptors (in \src) by examining the
  .beabuild.txt file in \build.
  
  You can recreate the entire contents of the \build directory by using
  the MedRec ant task in \src.
  
  
  \dist
  -----  
  \dist contains expanded .EAR directories for the three MedRec
  applications: medrec, physician, and startup.  Each application
  subdirectory in \dist contains the full contents of a deployable .EAR
  file (compiled classes as well as deployment descriptors).  You can
  deploy the individual apps by targetting the application directories
  (\dist\medrecEar, \dist\physicianEar, \dist\startupEar) using either
  weblogic.Deployer or the Administration Console.
  
  
  \lib
  ----  
  \lib contains struts, log4j, and other common libraries that are
  required to build the MedRec application from source.
  
  
  \setup
  ------  
  \setup contains a build script along with the \setup\config and
  \setup\db subdirectories, which help you recreate the contents of the
  medrec sample domai (WL_HOME\samples\domains\medrec).  The build
  script in \setup has the following targets:
  
   deploy.medrec.apps             Deploy MedRec split development apps.
  generate.medrec.domain         Recreates MedRec domain. CAUTION: Deletes existing domain!
  install                        Performs variable subsitution for new MedRec installations.
  load.db.data.oracle            Inserts test data.  CAUTION: Deletes ALL existing data!  For Oracle
  load.db.data.pointbase         Inserts test data.  CAUTION: Deletes ALL existing data!  For PointBase
  medrec.start                   Starts MedRec WLS server.
  medrec.stop                    Shuts down MedRec WLS server.
  setup.db.tables.oracle         Database table and sequence creation. For Oracle
  setup.db.tables.pointbase      Database table and sequence creation. For PointBase
  setup.medrec.db.pointbase.all  Starts PointBase and loads MedRec ddl and sql.
  stage.medrec.incoming.xml      Stages sample incoming XML medical record.
  start.db.pointbase             Starts PointBase.
  
  
  \src
  ----  
  \src contains the .java source files, editable deployment descriptors,
  and ant build scripts for the MedRec applications and client programs.
  The source for each MedRec application is organized in a dedicated
  subdirectory having the WebLogic split development directory
  structure.  For example, \src\medrecEar contains all of the source
  files used in building the MedRec Enterprise Application.  Each
  subdirectory in \src\medrecEar represents a component of the
  Enterprise Application, such as EJBs, Web Applications, and shared
  libraries.
  
  When you build the MedRec application using the \src\build.xml file,
  no files or directories in \src are modified.  Instead, all compiled
  classes and generated files are placed in \build.  \build and \src
  together create deployable units, as described in the \build section
  above.
  
  You can use the WebLogic split development directory structure and ant
  tasks with your own applications to simplify the build process and
  source control.  See the WebLogic Server documentation at
  http://edocs.bea.com for more information on programming WebLogic
  Server applications.


Tutorials
---------
See "Sample Application and Tutorials" for tutorials associated with MedRec.

http://e-docs.bea.com/wls/docs81/index.html


Architecture Guide
------------------
See "Avitek Medical Records Architecture Guide" for a guide to MedRec's 
architecture.

http://e-docs.bea.com/wls/docs81/index.html


Contact Us
----------
For questions, comments, and/or suggestions, please post to 
"weblogic.develope.interest.examples" located at the link below.

http://newsgroups.bea.com/cgi-bin/dnewsweb?cmd=xover&group=weblogic.developer.interest.examples&utag=
